{"version":3,"sources":["app/components/Table.tsx","app/hoc/AuthProvider.tsx","app/hooks/useAuth.ts","app/hoc/PrivateRoute.tsx","app/pages/AlbumPage.tsx","app/pages/CreateAlbumPage.tsx","app/pages/EditAlbumPage.tsx","app/components/form/Form.tsx","app/components/input/Input.tsx","app/pages/LoginPage.tsx","app/components/MobileNav.tsx","app/components/NavItem.tsx","app/components/Sidebar.tsx","app/pages/MainPage.tsx","app/pages/NotFoundPage.tsx","app/App.tsx","index.tsx"],"names":["headers","rows","id","data","Table","variant","map","h","row","datum","AuthContext","createContext","isAuthorized","localStorage","getItem","AuthProvider","children","useState","user","setUser","navigate","useNavigate","value","signIn","setItem","Date","toString","replace","signOut","removeItem","Provider","useContext","PrivateRoute","useAuth","to","AlbumPage","CreateAlbumPage","EditAlbumPage","Form","onSubmit","rest","Input","name","label","type","error","rules","register","isInvalid","htmlFor","placeholder","message","schema","yup","email","required","password","LoginPage","useForm","resolver","yupResolver","handleSubmit","formState","errors","isSubmitting","maxW","bgGradient","align","justify","p","w","bgColor","borderRadius","size","textAlign","pattern","mt","colorScheme","isLoading","MobileNav","onOpen","ml","base","md","px","height","alignItems","bg","useColorModeValue","borderBottomWidth","borderBottomColor","justifyContent","onClick","icon","fontSize","fontWeight","NavItem","path","leftIcon","as","role","_hover","color","LinkItems","MdOutlinePhotoAlbum","IoCreateOutline","Sidebar","onClose","borderRight","borderRightColor","pos","direction","display","link","mb","MainPage","useDisclosure","isOpen","minH","autoFocus","placement","returnFocusOnClose","onOverlayClick","NotFoundPage","client","ApolloClient","uri","process","REACT_APP_API_URL","cache","InMemoryCache","App","ApolloProvider","element","ReactDOM","document","getElementById"],"mappings":"8NAqBMA,EAAU,CAAC,KAAM,QAAS,WAAY,mBAAoB,IAC1DC,EAAO,CACX,CAAEC,GAAI,EAAGC,KAAM,CAAC,IAAK,WAAY,OAAQ,KAAM,cAC/C,CAAED,GAAI,EAAGC,KAAM,CAAC,IAAK,OAAQ,MAAO,MAAO,cAC3C,CAAED,GAAI,EAAGC,KAAM,CAAC,IAAK,UAAW,OAAQ,KAAM,eAqCjCC,EAlCS,WACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAaC,QAAQ,SAArB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACGL,EAAQM,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,UAAaA,GAAJA,UAIf,cAAC,IAAD,UACGN,EAAKK,KAAI,SAACE,GACT,OACE,cAAC,IAAD,UACGA,EAAIL,KAAKG,KAAI,SAACG,GAAD,OACZ,cAAC,IAAD,UAAiBA,GAARA,OAFJD,EAAIN,SAQnB,cAAC,IAAD,UACE,cAAC,IAAD,UACGF,EAAQM,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,UAAaA,GAAJA,gB,QCxCVG,EAAcC,wBACzB,MAGIC,EAAe,WACnB,QAAIC,aAAaC,QAAQ,eA4BZC,EArBmC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnD,EAAwBC,mBAAkBL,GAA1C,mBAAOM,EAAP,KAAaC,EAAb,KAEMC,EAAWC,cAaXC,EAA8B,CAAEJ,OAAMK,OAX7B,WACbV,aAAaW,QAAQ,cAAc,IAAIC,MAAOC,YAC9CP,GAAQ,GACRC,EAAS,eAAgB,CAAEO,SAAS,KAQcC,QALpC,WACdf,aAAagB,WAAW,cACxBV,GAAQ,KAKV,OAAO,cAACT,EAAYoB,SAAb,CAAsBR,MAAOA,EAA7B,SAAqCN,KCxC/B,oBAAMe,qBAAWrB,ICYjBsB,EAVmC,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SAGnD,OAFaiB,IAEHf,KAIHF,EAHE,cAAC,IAAD,CAAUkB,GAAG,wBCHTC,EAJa,WAC1B,OAAO,wCCGMC,EAJmB,WAChC,OAAO,+CCGMC,EAJiB,WAC9B,OAAO,6C,qFCYMC,EARmB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUvB,EAAwB,EAAxBA,SAAawB,EAAW,iBACrE,OACE,8CAAMD,SAAUA,GAAcC,GAA9B,aACGxB,M,sECyCQyB,EAzBqB,SAAC,GAQ9B,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MAMI,IALJC,YAKI,MALG,OAKH,EAJJC,EAII,EAJJA,MACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACGP,EACC,iBACJ,OACE,cAAC,IAAD,2BAASA,GAAT,aACE,eAAC,IAAD,CAAaQ,YAAaH,EAA1B,UACE,cAAC,IAAD,CAAWI,QAASP,EAApB,SAA2BC,IAC3B,cAAC,IAAD,aACEzC,GAAIwC,EACJE,KAAMA,EACNM,YAAaP,GACTI,EAASL,EAAMI,KAErB,cAAC,IAAD,UAAmBD,GAASA,EAAMM,iBCpCpCC,EAASC,IACL,CACNC,MAAOD,MAEJE,SAAS,oBACTD,MAAM,yBACTE,SAAUH,MAAaE,SAAS,sBAEjCA,WA4DYE,EA1Da,WAC1B,IAAQlC,EAAWU,IAAXV,OAER,EAIImC,YAAQ,CACVC,SAAUC,YAAYR,KAJtBS,EADF,EACEA,aACAd,EAFF,EAEEA,SAFF,IAGEe,UAAaC,EAHf,EAGeA,OAAQC,EAHvB,EAGuBA,aAKjBzB,EAAWsB,GAAa,kBAAMtC,OAEpC,OACE,cAAC,IAAD,CACE0C,KAAK,gBACLC,WAAW,oCAFb,SAIE,cAAC,IAAD,CAAM3D,EAAE,QAAQ4D,MAAM,SAASC,QAAQ,SAAvC,SACE,eAAC,IAAD,CAAKC,EAAG,GAAIC,EAAE,QAAQC,QAAQ,QAAQC,aAAa,KAAnD,UACE,cAAC,IAAD,CAASC,KAAK,KAAKC,UAAU,SAA7B,oBAGA,eAAC,EAAD,CAAMnC,SAAUA,EAAhB,UACE,cAAC,EAAD,CACEG,KAAK,QACLC,MAAM,QACNE,MAAOkB,EAAOT,MACdR,MAAO,CACL6B,QACE,6EAEJ5B,SAAUA,IAEZ,cAAC,EAAD,CACE6B,GAAG,IACHlC,KAAK,WACLC,MAAM,WACNC,KAAK,WACLC,MAAOkB,EAAOP,SACdT,SAAUA,IAEZ,cAAC,IAAD,CACEuB,EAAE,OACFM,GAAI,EACJC,YAAY,OACZC,UAAWd,EACXpB,KAAK,SALP,+B,+CCpBGmC,EA3BG,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAWxC,EAAwB,iBACtD,OACE,eAAC,IAAD,yBACEyC,GAAI,CAAEC,KAAM,EAAGC,GAAI,IACnBC,GAAI,CAAEF,KAAM,EAAGC,GAAI,IACnBE,OAAO,KACPC,WAAW,SACXC,GAAIC,YAAkB,QAAS,YAC/BC,kBAAkB,MAClBC,kBAAmBF,YAAkB,WAAY,YACjDG,eAAe,cACXnD,GATN,cAWE,cAAC,IAAD,CACEnC,QAAQ,UACRuF,QAASZ,EACT,aAAW,YACXa,KAAM,cAAC,IAAD,MAGR,cAAC,IAAD,CAAMC,SAAS,MAAMb,GAAG,IAAIc,WAAW,OAAvC,8B,kCCFSC,EArByB,SAAC,GAA8B,IAA5BH,EAA2B,EAA3BA,KAAMI,EAAqB,EAArBA,KAAMjF,EAAe,EAAfA,SACrD,OACE,cAAC,IAAD,CAAMkB,GAAI+D,EAAV,SACE,cAAC,IAAD,CACEpB,YAAY,OACZxE,QAAQ,QACRiE,EAAE,OACFqB,eAAe,aACfO,SAAU,cAAC,IAAD,CAAMC,GAAIN,IACpBO,KAAK,QACLC,OAAQ,CACNd,GAAI,OACJe,MAAO,SATX,SAYGtF,O,cCHHuF,EAAkC,CACtC,CAAE7D,KAAM,SAAUmD,KAAMW,IAAqBP,KAAM,UACnD,CAAEvD,KAAM,eAAgBmD,KAAMY,IAAiBR,KAAM,kBA0CxCS,EAnCyB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAYnE,EAAW,iBACxDZ,EAAYK,IAAZL,QAER,OACE,cAAC,IAAD,yBACE2D,GAAIC,YAAkB,QAAS,YAC/BoB,YAAY,MACZC,iBAAkBrB,YAAkB,WAAY,YAChDlB,EAAG,CAAEY,KAAM,OAAQC,GAAI,IACvB2B,IAAI,QACJ1B,GAAI,GACA5C,GAPN,aASE,eAAC,IAAD,CAAMuE,UAAU,SAASxG,EAAE,QAA3B,UACE,eAAC,IAAD,CAAMA,EAAE,KAAK+E,WAAW,SAASK,eAAe,gBAAhD,UACE,cAAC,IAAD,CAASlB,KAAK,KAAd,yBACA,cAAC,IAAD,CACEuC,QAAS,CAAE9B,KAAM,OAAQC,GAAI,QAC7BS,QAASe,OAGZJ,EAAUjG,KAAI,SAAC2G,GAAD,OACb,cAAC,EAAD,CAAyBpB,KAAMoB,EAAKpB,KAAMI,KAAMgB,EAAKhB,KAArD,SACGgB,EAAKvE,MADMuE,EAAKvE,SAIrB,cAAC,IAAD,IACA,cAAC,IAAD,CAAQ4B,EAAE,OAAO4C,GAAI,EAAGrC,YAAY,OAAOe,QAAShE,EAApD,4BCvBOuF,GA9BY,WACzB,MAAoCC,cAA5BC,EAAR,EAAQA,OAAQrC,EAAhB,EAAgBA,OAAQ2B,EAAxB,EAAwBA,QAExB,OACE,eAAC,IAAD,CAAKW,KAAK,QAAQpD,WAAW,oCAA7B,UACE,cAAC,EAAD,CACEyC,QAAS,kBAAMA,GACfK,QAAS,CAAE9B,KAAM,OAAQC,GAAI,WAE/B,cAAC,IAAD,CACEoC,WAAW,EACXF,OAAQA,EACRG,UAAU,OACVb,QAASA,EACTc,oBAAoB,EACpBC,eAAgBf,EAChBlC,KAAK,OAPP,SASE,cAAC,IAAD,UACE,cAAC,EAAD,CAASkC,QAASA,QAGtB,cAAC,EAAD,CAAWK,QAAS,CAAE9B,KAAM,OAAQC,GAAI,QAAUH,OAAQA,IAC1D,cAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,GAAI,IAAMd,EAAE,IAAhC,SACE,cAAC,IAAD,UCjBOsD,GAVgB,WAC7B,OACE,mCACE,gEAC+B,cAAC,IAAD,CAAMzF,GAAG,eAAT,wBCO/B0F,GAAS,IAAIC,IAAa,CAC9BC,IAAKC,+IAAYC,kBACjBC,MAAO,IAAIC,MA6BEC,GA1BO,WACpB,OACE,cAACC,EAAA,EAAD,CAAgBR,OAAQA,GAAxB,SACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CACE3B,KAAK,cACLoC,QACE,cAAC,EAAD,UACE,cAAC,GAAD,MAJN,UAQE,cAAC,IAAD,CAAOpC,KAAK,SAASoC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOpC,KAAK,aAAaoC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOpC,KAAK,kBAAkBoC,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CAAOpC,KAAK,gBAAgBoC,QAAS,cAAC,EAAD,SAEvC,cAAC,IAAD,CAAOpC,KAAK,oBAAoBoC,QAAS,cAAC,EAAD,MACzC,cAAC,IAAD,CAAOpC,KAAK,IAAIoC,QAAS,cAAC,GAAD,cChCnCC,SACE,cAAC,aAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.28368e52.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Table as ChakraTable,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableContainer,\n} from \"@chakra-ui/react\";\n\n// interface TableProps {\n//   headers: string[];\n//   rows: [{\n//     id: number;\n//     data: string[];\n//   }];\n//   footer?: string[];\n// };\n\nconst headers = [\"ID\", \"Title\", \"Username\", \"Number of photos\", \"\"];\nconst rows = [\n  { id: 1, data: [\"1\", \"Vacation\", \"Kate\", \"33\", \"[actions]\"] },\n  { id: 2, data: [\"2\", \"Prom\", \"Max\", \"100\", \"[actions]\"] },\n  { id: 3, data: [\"3\", \"Friends\", \"Mary\", \"15\", \"[actions]\"] },\n];\n\nconst Table: React.FC = () => {\n  return (\n    <TableContainer>\n      <ChakraTable variant=\"simple\">\n        <Thead>\n          <Tr>\n            {headers.map((h) => (\n              <Th key={h}>{h}</Th>\n            ))}\n          </Tr>\n        </Thead>\n        <Tbody>\n          {rows.map((row) => {\n            return (\n              <Tr key={row.id}>\n                {row.data.map((datum) => (\n                  <Td key={datum}>{datum}</Td>\n                ))}\n              </Tr>\n            );\n          })}\n        </Tbody>\n        <Tfoot>\n          <Tr>\n            {headers.map((h) => (\n              <Th key={h}>{h}</Th>\n            ))}\n          </Tr>\n        </Tfoot>\n      </ChakraTable>\n    </TableContainer>\n  );\n};\n\nexport default Table;\n","import React, { createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface AuthContextInterface {\n  user: boolean;\n  signIn: () => void;\n  signOut: () => void;\n}\n\nexport interface AuthProviderProps {\n  children: React.ReactElement;\n}\n\nexport const AuthContext = createContext(\n  null as unknown as AuthContextInterface\n);\n\nconst isAuthorized = (): boolean => {\n  if (localStorage.getItem(\"fake-token\")) {\n    return true;\n  }\n\n  return false;\n};\n\nconst AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<boolean>(isAuthorized);\n\n  const navigate = useNavigate();\n\n  const signIn = () => {\n    localStorage.setItem(\"fake-token\", new Date().toString());\n    setUser(true);\n    navigate(\"/admin_panel\", { replace: true });\n  };\n\n  const signOut = () => {\n    localStorage.removeItem(\"fake-token\");\n    setUser(false);\n  };\n\n  const value: AuthContextInterface = { user, signIn, signOut };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n","import { useContext } from \"react\";\nimport { AuthContext } from \"../hoc/AuthProvider\";\n\nexport default () => useContext(AuthContext);\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\nimport { AuthProviderProps } from \"./AuthProvider\";\n\nconst PrivateRoute: React.FC<AuthProviderProps> = ({ children }) => {\n  const auth = useAuth();\n\n  if (!auth.user) {\n    return <Navigate to=\"/admin_panel/login\" />;\n  }\n\n  return children;\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\n\nconst AlbumPage: React.FC = () => {\n  return <h1>Album</h1>;\n};\n\nexport default AlbumPage;\n","import React from \"react\";\n\nconst CreateAlbumPage: React.FC = () => {\n  return <h1>Create album</h1>;\n};\n\nexport default CreateAlbumPage;\n","import React from \"react\";\n\nconst EditAlbumPage: React.FC = () => {\n  return <h1>Edit album</h1>;\n};\n\nexport default EditAlbumPage;\n","import React from \"react\";\n\ninterface FormProps {\n  onSubmit: React.FormEventHandler<HTMLFormElement>;\n  children: React.ReactNode;\n}\n\nconst Form: React.FC<FormProps> = ({ onSubmit, children, ...rest }) => {\n  return (\n    <form onSubmit={onSubmit} {...rest}>\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  Input as ChakraInput,\n  Box,\n  BoxProps,\n} from \"@chakra-ui/react\";\nimport {\n  UseFormRegister,\n  FieldValues,\n  RegisterOptions,\n  FieldError,\n} from \"react-hook-form\";\n\ninterface InputProps extends BoxProps {\n  name: string;\n  label: string;\n  type?: string;\n  error: FieldError;\n  rules?: RegisterOptions;\n  register: UseFormRegister<FieldValues>;\n  rest?: string[];\n}\n\nconst Input: React.FC<InputProps> = ({\n  name,\n  label,\n  type = \"text\",\n  error,\n  rules,\n  register,\n  ...rest\n}) => {\n  return (\n    <Box {...rest}>\n      <FormControl isInvalid={!!error}>\n        <FormLabel htmlFor={name}>{label}</FormLabel>\n        <ChakraInput\n          id={name}\n          type={type}\n          placeholder={label}\n          {...register(name, rules)}\n        />\n        <FormErrorMessage>{error && error.message}</FormErrorMessage>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { Container, Flex, Box, Heading, Button } from \"@chakra-ui/react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport Form from \"../components/form\";\nimport Input from \"../components/input\";\nimport useAuth from \"../hooks/useAuth\";\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .required(\"This is required\")\n      .email(\"Must be a valid email\"),\n    password: yup.string().required(\"This is required\"),\n  })\n  .required();\n\nconst LoginPage: React.FC = () => {\n  const { signIn } = useAuth();\n\n  const {\n    handleSubmit,\n    register,\n    formState: { errors, isSubmitting },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = handleSubmit(() => signIn());\n\n  return (\n    <Container\n      maxW=\"container.xxl\"\n      bgGradient=\"linear(to-r, green.100, pink.300)\"\n    >\n      <Flex h=\"100vh\" align=\"center\" justify=\"center\">\n        <Box p={10} w=\"500px\" bgColor=\"white\" borderRadius=\"lg\">\n          <Heading size=\"lg\" textAlign=\"center\">\n            Log In\n          </Heading>\n          <Form onSubmit={onSubmit}>\n            <Input\n              name=\"email\"\n              label=\"Email\"\n              error={errors.email}\n              rules={{\n                pattern:\n                  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n              }}\n              register={register}\n            />\n            <Input\n              mt=\"2\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              error={errors.password}\n              register={register}\n            />\n            <Button\n              w=\"full\"\n              mt={4}\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n              type=\"submit\"\n            >\n              Log In\n            </Button>\n          </Form>\n        </Box>\n      </Flex>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport {\n  FlexProps,\n  Flex,\n  useColorModeValue,\n  IconButton,\n  Text,\n} from \"@chakra-ui/react\";\nimport { FiMenu } from \"react-icons/fi\";\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n}\n\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 24 }}\n      height=\"20\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent=\"flex-start\"\n      {...rest}\n    >\n      <IconButton\n        variant=\"outline\"\n        onClick={onOpen}\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Text fontSize=\"2xl\" ml=\"8\" fontWeight=\"bold\">\n        Admin Panel\n      </Text>\n    </Flex>\n  );\n};\n\nexport default MobileNav;\n","import React from \"react\";\nimport { Icon, Button, FlexProps } from \"@chakra-ui/react\";\nimport { IconType } from \"react-icons\";\nimport { Link } from \"react-router-dom\";\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  children: React.ReactText;\n  path: string;\n}\n\nconst NavItem: React.FC<NavItemProps> = ({ icon, path, children }) => {\n  return (\n    <Link to={path}>\n      <Button\n        colorScheme=\"teal\"\n        variant=\"ghost\"\n        w=\"full\"\n        justifyContent=\"flex-start\"\n        leftIcon={<Icon as={icon} />}\n        role=\"group\"\n        _hover={{\n          bg: \"teal\",\n          color: \"white\",\n        }}\n      >\n        {children}\n      </Button>\n    </Link>\n  );\n};\n\nexport default NavItem;\n","import React from \"react\";\nimport {\n  Box,\n  CloseButton,\n  Flex,\n  useColorModeValue,\n  Heading,\n  BoxProps,\n  Button,\n  Spacer,\n} from \"@chakra-ui/react\";\nimport { IconType } from \"react-icons\";\nimport { IoCreateOutline } from \"react-icons/io5\";\nimport { MdOutlinePhotoAlbum } from \"react-icons/md\";\nimport useAuth from \"../hooks/useAuth\";\nimport NavItem from \"./NavItem\";\n\ninterface LinkItemProps {\n  name: string;\n  icon: IconType;\n  path: string;\n}\n\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Albums\", icon: MdOutlinePhotoAlbum, path: \"albums\" },\n  { name: \"Create album\", icon: IoCreateOutline, path: \"albums/create\" },\n];\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ onClose, ...rest }) => {\n  const { signOut } = useAuth();\n\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      px={4}\n      {...rest}\n    >\n      <Flex direction=\"column\" h=\"100vh\">\n        <Flex h=\"20\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading size=\"md\">Admin Panel</Heading>\n          <CloseButton\n            display={{ base: \"flex\", md: \"none\" }}\n            onClick={onClose}\n          />\n        </Flex>\n        {LinkItems.map((link) => (\n          <NavItem key={link.name} icon={link.icon} path={link.path}>\n            {link.name}\n          </NavItem>\n        ))}\n        <Spacer />\n        <Button w=\"full\" mb={4} colorScheme=\"teal\" onClick={signOut}>\n          Log Out\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { Box, Drawer, DrawerContent, useDisclosure } from \"@chakra-ui/react\";\nimport { Outlet } from \"react-router-dom\";\nimport MobileNav from \"../components/MobileNav\";\nimport Sidebar from \"../components/Sidebar\";\n\nconst MainPage: React.FC = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Box minH=\"100vh\" bgGradient=\"linear(to-r, green.100, pink.300)\">\n      <Sidebar\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size=\"full\"\n      >\n        <DrawerContent>\n          <Sidebar onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      <MobileNav display={{ base: \"flex\", md: \"none\" }} onOpen={onOpen} />\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\n        <Outlet />\n      </Box>\n    </Box>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFoundPage: React.FC = () => {\n  return (\n    <>\n      <div>\n        This page does not exist. Go <Link to=\"/admin_panel\">home</Link>\n      </div>\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport { Routes, Route } from \"react-router-dom\";\n// import { Example } from \"./components\";\nimport Table from \"./components/Table\";\nimport AuthProvider from \"./hoc/AuthProvider\";\nimport PrivateRoute from \"./hoc/PrivateRoute\";\nimport AlbumPage from \"./pages/AlbumPage\";\nimport CreateAlbumPage from \"./pages/CreateAlbumPage\";\nimport EditAlbumPage from \"./pages/EditAlbumPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport MainPage from \"./pages/MainPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_URL,\n  cache: new InMemoryCache(),\n});\n\nconst App: React.FC = () => {\n  return (\n    <ApolloProvider client={client}>\n      <AuthProvider>\n        <Routes>\n          <Route\n            path=\"admin_panel\"\n            element={\n              <PrivateRoute>\n                <MainPage />\n              </PrivateRoute>\n            }\n          >\n            <Route path=\"albums\" element={<Table />} />\n            <Route path=\"albums/:id\" element={<AlbumPage />} />\n            <Route path=\"albums/:id/edit\" element={<EditAlbumPage />} />\n            <Route path=\"albums/create\" element={<CreateAlbumPage />} />\n          </Route>\n          <Route path=\"admin_panel/login\" element={<LoginPage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport * as ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}